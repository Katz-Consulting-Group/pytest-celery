[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.4.0"]

[tool.black]
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | \.idea
  | \.github
)/
'''
include = '\.pyi?$'
line-length = 120

[tool.autoflake]
check = true

[tool.isort]
line_length = 120
multi_line_output = 7
profile = "black"
force_single_line = true

[tool.flake8]
max-line-length = 120

[tool.poetry]
authors = [
    "Thomas Grainger <pytest-celery@graingert.co.uk>",
    "Omer Katz <omer.katz@omerkatz.com>",
    "Tomer Nosrati <tomer.nosrati@kcg.tech>"
]
classifiers = ["License :: OSI Approved :: BSD License"]
description = "Pytest plugin for Celery"
homepage = "https://github.com/celery/pytest-celery"
license = "BSD"
name = "pytest-celery"
version = "0.1.1"

[tool.poetry.dependencies]
python = ">= 3.7,<4.0"
celery = "^5.2.7"

[tool.poetry.group.dev]

[tool.poetry.group.dev.dependencies]
black = "*"
toml-sort = "^0.22.1"
autoflake = [
    {version = "^1.7.0", python = "<3.8.1"},
    {version = "^2.0.0", python = ">=3.8.1,<4.0"},
]
isort = "^5.11.4"
flake8 = [
    {version = "^5.0.0", python = "<3.8.1"},
    {version = "^6.0.0", python = ">=3.8.1,<4.0"},
]
pre-commit = "^2.21.0"
redis = { version = "^4.4.2", extras = ["hiredis"] }

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
tox = [
    {version = "^3.0.0", python = "<3.8.1"},
    {version = "^4.2.7", python = ">=3.8.1,<4.0"},
]
pytest = "^7.2.0"
tox-poetry = "^0.4.1"
pytest-docker-tools = "^3.1.3"
pytest-sugar = { version = "^0.9.6", python = ">=3.8,<4.0" }
# pytest-cov = "^4.0.0"
pytest-xdist = "^3.1.0"
# mocket = { version = "^3.10.8", extras = ["speedups"] }
# pytest-subtests = "^0.8.0"

[tool.poetry.plugins.pytest11]
celery = "pytest_celery.plugin"

# [tool.pytest.ini_options]
# addopts = "-p no:celery --runpytest subprocess"
# minversion = "6.0"
# pytester_example_dir = "examples"
# xfail_strict = true

[tool.pytest.ini_options]
# addopts = "--strict-markers"
testpaths = "tests"
python_classes = "test_*"
xfail_strict=true
# markers = ["sleepdeprived_patched_module", "masked_modules", "patched_environ", "patched_module", "flaky", "timeout"]
